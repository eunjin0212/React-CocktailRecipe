[{"C:\\Users\\eunji\\OneDrive\\Documents\\dev\\react-cocktail\\src\\App.js":"1","C:\\Users\\eunji\\OneDrive\\Documents\\dev\\react-cocktail\\src\\Components\\useFetch.jsx":"2","C:\\Users\\eunji\\OneDrive\\Documents\\dev\\react-cocktail\\src\\Components\\GlobalStyles.jsx":"3","C:\\Users\\eunji\\OneDrive\\Documents\\dev\\react-cocktail\\src\\Screens\\Main.jsx":"4","C:\\Users\\eunji\\OneDrive\\Documents\\dev\\react-cocktail\\src\\Components\\Header.jsx":"5","C:\\Users\\eunji\\OneDrive\\Documents\\dev\\react-cocktail\\src\\Screens\\Search.jsx":"6"},{"size":204,"mtime":1609298532329,"results":"7","hashOfConfig":"8"},{"size":430,"mtime":1609298481047,"results":"9","hashOfConfig":"8"},{"size":770,"mtime":1609298578686,"results":"10","hashOfConfig":"8"},{"size":1344,"mtime":1609409210443,"results":"11","hashOfConfig":"8"},{"size":338,"mtime":1609299489703,"results":"12","hashOfConfig":"8"},{"size":1866,"mtime":1609510258645,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s2gxdr",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\eunji\\OneDrive\\Documents\\dev\\react-cocktail\\src\\App.js",[],"C:\\Users\\eunji\\OneDrive\\Documents\\dev\\react-cocktail\\src\\Components\\useFetch.jsx",["28"],"import { useState, useEffect } from \"react\";\r\n\r\nfunction useFetch(url) {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  async function fetchUrl() {\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n    setData(json);\r\n    setLoading(false);\r\n  }\r\n  useEffect(() => {\r\n    fetchUrl();\r\n  }, []);\r\n  return [data, loading];\r\n}\r\nexport default useFetch;\r\n",["29","30"],"C:\\Users\\eunji\\OneDrive\\Documents\\dev\\react-cocktail\\src\\Components\\GlobalStyles.jsx",[],"C:\\Users\\eunji\\OneDrive\\Documents\\dev\\react-cocktail\\src\\Screens\\Main.jsx",[],"C:\\Users\\eunji\\OneDrive\\Documents\\dev\\react-cocktail\\src\\Components\\Header.jsx",["31"],"C:\\Users\\eunji\\OneDrive\\Documents\\dev\\react-cocktail\\src\\Screens\\Search.jsx",["32","33","34"],{"ruleId":"35","severity":1,"message":"36","line":14,"column":6,"nodeType":"37","endLine":14,"endColumn":8,"suggestions":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":3,"column":1,"nodeType":"45","endLine":5,"endColumn":3},{"ruleId":"46","severity":1,"message":"47","line":75,"column":7,"nodeType":"48","messageId":"49","endLine":75,"endColumn":11},{"ruleId":"46","severity":1,"message":"50","line":76,"column":7,"nodeType":"48","messageId":"49","endLine":76,"endColumn":13},{"ruleId":"46","severity":1,"message":"51","line":79,"column":7,"nodeType":"48","messageId":"49","endLine":79,"endColumn":14},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUrl'. Either include it or remove the dependency array.","ArrayExpression",["52"],"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Form' is assigned a value but never used.","Identifier","unusedVar","'Submit' is assigned a value but never used.","'Results' is assigned a value but never used.",{"desc":"55","fix":"56"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [fetchUrl]",{"range":"57","text":"58"},[368,370],"[fetchUrl]"]